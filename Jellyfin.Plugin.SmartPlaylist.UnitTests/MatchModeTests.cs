using Jellyfin.Plugin.SmartPlaylist.Extensions;
using Jellyfin.Plugin.SmartPlaylist.Infrastructure.QueryEngine;
using Shouldly;
using Xunit.Abstractions;

namespace Jellyfin.Plugin.SmartPlaylist.UnitTests;

public class MatchModeTests
{
    public ITestOutputHelper Logger { get; }

    public MatchModeTests(ITestOutputHelper logger)
    {
        Logger = logger;
    }

    [Theory]
    [InlineData(1, 1, true)]
    [InlineData(2, 1, true)]
    [InlineData(3, 1, true)]
    [InlineData(4, 1, true)]
    [InlineData(5, 1, true)]
    [InlineData(10, 1, true)]
    [InlineData(15, 1, true)]
    [InlineData(20, 1, true)]
    [InlineData(25, 1, true)]
    [InlineData(50, 1, true)]
    [InlineData(75, 1, true)]
    [InlineData(100, 1, true)]
    [InlineData(1000, 1, true)]
    [InlineData(1, 0, false)]
    [InlineData(2, 0, false)]
    [InlineData(3, 0, false)]
    [InlineData(4, 0, false)]
    [InlineData(5, 0, false)]
    [InlineData(10, 0, false)]
    [InlineData(15, 0, false)]
    [InlineData(20, 0, false)]
    [InlineData(25, 0, false)]
    [InlineData(50, 0, false)]
    [InlineData(75, 0, false)]
    [InlineData(100, 0, false)]
    [InlineData(1000, 0, false)]
    [InlineData(1, 5, false)]
    [InlineData(2, 5, false)]
    [InlineData(3, 5, false)]
    [InlineData(4, 5, false)]
    [InlineData(5, 5, false)]
    [InlineData(10, 5, false)]
    [InlineData(15, 5, false)]
    [InlineData(20, 5, false)]
    [InlineData(25, 5, false)]
    [InlineData(50, 5, false)]
    [InlineData(75, 5, false)]
    [InlineData(100, 5, false)]
    [InlineData(1000, 5, false)]
    public void MatchOne(int totalChecks, int matchCount, bool shouldPass)
    {
        MatchMode.OnlyOne.DoesMatch(matchCount, totalChecks).ShouldBe(shouldPass);
        MatchMode.One.DoesMatch(matchCount, totalChecks).ShouldBe(shouldPass);
    }

    [Theory]
    [InlineData(1, 1, true)]
    [InlineData(2, 1, true)]
    [InlineData(3, 1, true)]
    [InlineData(4, 1, true)]
    [InlineData(5, 1, true)]
    [InlineData(10, 1, true)]
    [InlineData(15, 1, true)]
    [InlineData(20, 1, true)]
    [InlineData(25, 1, true)]
    [InlineData(50, 1, true)]
    [InlineData(75, 1, true)]
    [InlineData(100, 1, true)]
    [InlineData(1000, 1, true)]
    [InlineData(1, 5, true)]
    [InlineData(2, 5, true)]
    [InlineData(3, 5, true)]
    [InlineData(4, 5, true)]
    [InlineData(5, 5, true)]
    [InlineData(10, 5, true)]
    [InlineData(15, 5, true)]
    [InlineData(20, 5, true)]
    [InlineData(25, 5, true)]
    [InlineData(50, 5, true)]
    [InlineData(75, 5, true)]
    [InlineData(100, 5, true)]
    [InlineData(1000, 5, true)]
    [InlineData(1, 0, false)]
    [InlineData(2, 0, false)]
    [InlineData(3, 0, false)]
    [InlineData(4, 0, false)]
    [InlineData(5, 0, false)]
    [InlineData(10, 0, false)]
    [InlineData(15, 0, false)]
    [InlineData(20, 0, false)]
    [InlineData(25, 0, false)]
    [InlineData(50, 0, false)]
    [InlineData(75, 0, false)]
    [InlineData(100, 0, false)]
    [InlineData(1000, 0, false)]
    public void MatchAny(int totalChecks, int matchCount, bool shouldPass) =>
            MatchMode.Any.DoesMatch(matchCount, totalChecks).ShouldBe(shouldPass);

    [Theory]
    [InlineData(1, 0, false)]
    [InlineData(2, 1, true)]
    [InlineData(3, 1, false)]
    [InlineData(4, 1, false)]
    [InlineData(5, 1, false)]
    [InlineData(10, 1, false)]
    [InlineData(15, 1, false)]
    [InlineData(20, 1, false)]
    [InlineData(25, 1, false)]
    [InlineData(50, 1, false)]
    [InlineData(75, 1, false)]
    [InlineData(100, 1, false)]
    [InlineData(1000, 1, false)]
    [InlineData(1, 1, false)]
    [InlineData(2, 2, false)]
    [InlineData(3, 3, false)]
    [InlineData(4, 4, false)]
    [InlineData(5, 5, false)]
    [InlineData(10, 10, false)]
    [InlineData(15, 10, false)]
    [InlineData(20, 10, false)]
    [InlineData(25, 10, false)]
    [InlineData(50, 10, false)]
    [InlineData(75, 10, false)]
    [InlineData(100, 10, false)]
    [InlineData(1000, 10, false)]
    [InlineData(3, 2, true)]
    [InlineData(4, 3, true)]
    [InlineData(5, 4, true)]
    [InlineData(10, 9, true)]
    [InlineData(15, 14, true)]
    [InlineData(20, 19, true)]
    [InlineData(25, 24, true)]
    [InlineData(50, 49, true)]
    [InlineData(75, 74, true)]
    [InlineData(100, 99, true)]
    [InlineData(1000, 999, true)]
    public void MatchAllButOne(int totalChecks, int matchCount, bool shouldPass) =>
            MatchMode.AllButOne.DoesMatch(matchCount, totalChecks).ShouldBe(shouldPass);

    [Theory]
    [InlineData(1, 0, true)]
    [InlineData(2, 0, true)]
    [InlineData(3, 0, true)]
    [InlineData(4, 0, true)]
    [InlineData(5, 0, true)]
    [InlineData(10, 0, true)]
    [InlineData(15, 0, true)]
    [InlineData(20, 0, true)]
    [InlineData(25, 0, true)]
    [InlineData(50, 0, true)]
    [InlineData(75, 0, true)]
    [InlineData(100, 0, true)]
    [InlineData(1000, 0, true)]
    [InlineData(2, 1, false)]
    [InlineData(3, 1, false)]
    [InlineData(4, 1, false)]
    [InlineData(5, 1, false)]
    [InlineData(10, 1, false)]
    [InlineData(15, 1, false)]
    [InlineData(20, 1, false)]
    [InlineData(25, 1, false)]
    [InlineData(50, 1, false)]
    [InlineData(75, 1, false)]
    [InlineData(100, 1, false)]
    [InlineData(1000, 1, false)]
    [InlineData(1, 1, false)]
    [InlineData(2, 2, false)]
    [InlineData(3, 3, false)]
    [InlineData(4, 4, false)]
    [InlineData(5, 5, false)]
    [InlineData(10, 10, false)]
    [InlineData(15, 10, false)]
    [InlineData(20, 10, false)]
    [InlineData(25, 10, false)]
    [InlineData(50, 10, false)]
    [InlineData(75, 10, false)]
    [InlineData(100, 10, false)]
    [InlineData(1000, 10, false)]
    [InlineData(3, 2, false)]
    [InlineData(4, 3, false)]
    [InlineData(5, 4, false)]
    [InlineData(10, 9, false)]
    [InlineData(15, 14, false)]
    [InlineData(20, 19, false)]
    [InlineData(25, 24, false)]
    [InlineData(50, 49, false)]
    [InlineData(75, 74, false)]
    [InlineData(100, 99, false)]
    [InlineData(1000, 999, false)]
    public void MatchNone(int totalChecks, int matchCount, bool shouldPass)
    {
        MatchMode.Zero.DoesMatch(matchCount, totalChecks).ShouldBe(shouldPass);
        MatchMode.None.DoesMatch(matchCount, totalChecks).ShouldBe(shouldPass);
    }

    [Theory]
    [InlineData(0, 0, false)]
    [InlineData(1, 0, false)]
    [InlineData(2, 0, false)]
    [InlineData(3, 0, false)]
    [InlineData(4, 0, false)]
    [InlineData(5, 0, false)]
    [InlineData(10, 0, false)]
    [InlineData(15, 0, false)]
    [InlineData(20, 0, false)]
    [InlineData(25, 0, false)]
    [InlineData(50, 0, false)]
    [InlineData(75, 0, false)]
    [InlineData(100, 0, false)]
    [InlineData(1000, 0, false)]
    [InlineData(2, 1, false)]
    [InlineData(3, 1, false)]
    [InlineData(4, 1, false)]
    [InlineData(5, 1, false)]
    [InlineData(10, 1, false)]
    [InlineData(15, 1, false)]
    [InlineData(20, 1, false)]
    [InlineData(25, 1, false)]
    [InlineData(50, 1, false)]
    [InlineData(75, 1, false)]
    [InlineData(100, 1, false)]
    [InlineData(1000, 1, false)]
    [InlineData(1, 1, true)]
    [InlineData(2, 2, true)]
    [InlineData(3, 3, true)]
    [InlineData(4, 4, true)]
    [InlineData(5, 5, true)]
    [InlineData(10, 10, true)]
    [InlineData(15, 15, true)]
    [InlineData(20, 20, true)]
    [InlineData(25, 25, true)]
    [InlineData(50, 50, true)]
    [InlineData(75, 75, true)]
    [InlineData(100, 100, true)]
    [InlineData(1000, 1000, true)]
    [InlineData(3, 2, false)]
    [InlineData(4, 3, false)]
    [InlineData(5, 4, false)]
    [InlineData(10, 9, false)]
    [InlineData(15, 14, false)]
    [InlineData(20, 19, false)]
    [InlineData(25, 24, false)]
    [InlineData(50, 49, false)]
    [InlineData(75, 74, false)]
    [InlineData(100, 99, false)]
    [InlineData(1000, 999, false)]
    public void MatchAll(int totalChecks, int matchCount, bool shouldPass) =>
            MatchMode.All.DoesMatch(matchCount, totalChecks).ShouldBe(shouldPass);

    [Theory]
    [InlineData(0, 0, false)]
    [InlineData(1, 0, false)]
    [InlineData(2, 0, false)]
    [InlineData(3, 0, false)]
    [InlineData(4, 0, false)]
    [InlineData(5, 0, false)]
    [InlineData(10, 0, false)]
    [InlineData(15, 0, false)]
    [InlineData(20, 0, false)]
    [InlineData(25, 0, false)]
    [InlineData(50, 0, false)]
    [InlineData(75, 0, false)]
    [InlineData(100, 0, false)]
    [InlineData(1000, 0, false)]
    [InlineData(1, 1, false)]
    [InlineData(2, 2, false)]
    [InlineData(3, 3, false)]
    [InlineData(4, 4, false)]
    [InlineData(5, 5, false)]
    [InlineData(10, 10, false)]
    [InlineData(15, 15, false)]
    [InlineData(20, 20, false)]
    [InlineData(25, 25, false)]
    [InlineData(50, 50, false)]
    [InlineData(75, 75, false)]
    [InlineData(100, 100, false)]
    [InlineData(1000, 1000, false)]
    [InlineData(2, 1, true)]
    [InlineData(3, 1, true)]
    [InlineData(3, 2, false)]
    [InlineData(4, 2, true)]
    [InlineData(5, 2, true)]
    [InlineData(5, 3, false)]
    [InlineData(10, 5, true)]
    [InlineData(15, 7, true)]
    [InlineData(15, 8, false)]
    [InlineData(20, 10, true)]
    [InlineData(50, 25, true)]
    [InlineData(100, 50, true)]
    [InlineData(1000, 500, true)]
    public void MatchHalf(int totalChecks, int matchCount, bool shouldPass) =>
            MatchMode.Half.DoesMatch(matchCount, totalChecks).ShouldBe(shouldPass);

    [Theory]
    [InlineData(0, 0, false)]
    [InlineData(1, 0, false)]
    [InlineData(2, 0, false)]
    [InlineData(3, 0, false)]
    [InlineData(4, 0, false)]
    [InlineData(5, 0, false)]
    [InlineData(10, 0, false)]
    [InlineData(15, 0, false)]
    [InlineData(20, 0, false)]
    [InlineData(25, 0, false)]
    [InlineData(50, 0, false)]
    [InlineData(75, 0, false)]
    [InlineData(100, 0, false)]
    [InlineData(1000, 0, false)]
    [InlineData(1, 1, true)]
    [InlineData(2, 2, true)]
    [InlineData(3, 3, true)]
    [InlineData(4, 4, true)]
    [InlineData(5, 5, true)]
    [InlineData(10, 10, true)]
    [InlineData(15, 15, true)]
    [InlineData(20, 20, true)]
    [InlineData(25, 25, true)]
    [InlineData(50, 50, true)]
    [InlineData(75, 75, true)]
    [InlineData(100, 100, true)]
    [InlineData(1000, 1000, true)]
    [InlineData(2, 1, true)]
    [InlineData(3, 1, true)]
    [InlineData(3, 2, true)]
    [InlineData(4, 2, true)]
    [InlineData(5, 2, true)]
    [InlineData(5, 3, true)]
    [InlineData(10, 5, true)]
    [InlineData(15, 7, true)]
    [InlineData(15, 8, true)]
    [InlineData(20, 10, true)]
    [InlineData(50, 25, true)]
    [InlineData(100, 50, true)]
    [InlineData(1000, 500, true)]
    public void MatchHalfOrMore(int totalChecks, int matchCount, bool shouldPass) =>
            MatchMode.HalfOrMore.DoesMatch(matchCount, totalChecks).ShouldBe(shouldPass);

    [Theory]
    [InlineData(0, 0, false)]
    [InlineData(1, 0, false)]
    [InlineData(2, 0, false)]
    [InlineData(3, 0, false)]
    [InlineData(4, 0, false)]
    [InlineData(5, 0, false)]
    [InlineData(10, 0, false)]
    [InlineData(15, 0, false)]
    [InlineData(20, 0, false)]
    [InlineData(25, 0, false)]
    [InlineData(50, 0, false)]
    [InlineData(75, 0, false)]
    [InlineData(100, 0, false)]
    [InlineData(1000, 0, false)]
    [InlineData(1, 1, false)]
    [InlineData(2, 2, false)]
    [InlineData(3, 3, false)]
    [InlineData(4, 4, false)]
    [InlineData(5, 5, false)]
    [InlineData(10, 10, false)]
    [InlineData(15, 15, false)]
    [InlineData(20, 20, false)]
    [InlineData(25, 25, false)]
    [InlineData(50, 50, false)]
    [InlineData(75, 75, false)]
    [InlineData(100, 100, false)]
    [InlineData(1000, 1000, false)]
    [InlineData(2, 1, true)]
    [InlineData(3, 1, true)]
    [InlineData(3, 2, false)]
    [InlineData(4, 2, true)]
    [InlineData(5, 2, true)]
    [InlineData(5, 3, false)]
    [InlineData(10, 5, true)]
    [InlineData(15, 7, true)]
    [InlineData(15, 8, false)]
    [InlineData(20, 10, true)]
    [InlineData(50, 25, true)]
    [InlineData(100, 50, true)]
    [InlineData(1000, 500, true)]
    public void MatchHalfOrLess(int totalChecks, int matchCount, bool shouldPass) =>
            MatchMode.HalfOrLess.DoesMatch(matchCount, totalChecks).ShouldBe(shouldPass);
}
